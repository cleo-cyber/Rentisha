@model Rentisha.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/css/Registration.css" rel="stylesheet" />
    <link href="~/Content/css/Credentials.css" rel="stylesheet" />
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <title>Registration</title>
</head>
<body>

    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {

        if (ViewBag.Message != null)
        {
            <div class=" alert alert-success">

                <strong>Success!</strong>@ViewBag.Message
            </div>
        }
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="regForm">
    <div class="form-group">
        <h3 class="form-title">Create Your Account</h3>
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
      
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input" } })

            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control input" } })
            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            @Html.ValidationMessage("EmailExists", new { @class = "text-danger" })



            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control input" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control input" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
       
  

    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })

    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control input" } })
    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

    
        <button type="submit" class="Registerbtn">Register</button>
    
      
    <span>Already have an account?</span> @Html.ActionLink("Login", "Login")
</div>
    </div>



    if (ViewBag.Message != null)
    {
    <div class=" alert alert-danger">

        <strong>Error!</strong>@ViewBag.Message
    </div>
    }
    }
    }



    
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>
